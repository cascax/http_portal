// Code generated by protoc-gen-go. DO NOT EDIT.
// source: portal.proto

package portalcore

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AckCode int32

const (
	AckCode_Success  AckCode = 0
	AckCode_NotLogin AckCode = 1
)

var AckCode_name = map[int32]string{
	0: "Success",
	1: "NotLogin",
}

var AckCode_value = map[string]int32{
	"Success":  0,
	"NotLogin": 1,
}

func (x AckCode) String() string {
	return proto.EnumName(AckCode_name, int32(x))
}

func (AckCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ead6f188e0e8e0b1, []int{0}
}

type HttpRequest struct {
	Method               string                `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
	Url                  string                `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	ReqProto             string                `protobuf:"bytes,3,opt,name=req_proto,json=reqProto,proto3" json:"req_proto,omitempty"`
	Header               []*HttpRequest_Header `protobuf:"bytes,4,rep,name=header,proto3" json:"header,omitempty"`
	Body                 []byte                `protobuf:"bytes,5,opt,name=body,proto3" json:"body,omitempty"`
	Host                 string                `protobuf:"bytes,6,opt,name=host,proto3" json:"host,omitempty"`
	RemoteAddr           string                `protobuf:"bytes,7,opt,name=remote_addr,json=remoteAddr,proto3" json:"remote_addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *HttpRequest) Reset()         { *m = HttpRequest{} }
func (m *HttpRequest) String() string { return proto.CompactTextString(m) }
func (*HttpRequest) ProtoMessage()    {}
func (*HttpRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ead6f188e0e8e0b1, []int{0}
}

func (m *HttpRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HttpRequest.Unmarshal(m, b)
}
func (m *HttpRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HttpRequest.Marshal(b, m, deterministic)
}
func (m *HttpRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HttpRequest.Merge(m, src)
}
func (m *HttpRequest) XXX_Size() int {
	return xxx_messageInfo_HttpRequest.Size(m)
}
func (m *HttpRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HttpRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HttpRequest proto.InternalMessageInfo

func (m *HttpRequest) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *HttpRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *HttpRequest) GetReqProto() string {
	if m != nil {
		return m.ReqProto
	}
	return ""
}

func (m *HttpRequest) GetHeader() []*HttpRequest_Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HttpRequest) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *HttpRequest) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *HttpRequest) GetRemoteAddr() string {
	if m != nil {
		return m.RemoteAddr
	}
	return ""
}

type HttpRequest_Header struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                []string `protobuf:"bytes,2,rep,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HttpRequest_Header) Reset()         { *m = HttpRequest_Header{} }
func (m *HttpRequest_Header) String() string { return proto.CompactTextString(m) }
func (*HttpRequest_Header) ProtoMessage()    {}
func (*HttpRequest_Header) Descriptor() ([]byte, []int) {
	return fileDescriptor_ead6f188e0e8e0b1, []int{0, 0}
}

func (m *HttpRequest_Header) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HttpRequest_Header.Unmarshal(m, b)
}
func (m *HttpRequest_Header) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HttpRequest_Header.Marshal(b, m, deterministic)
}
func (m *HttpRequest_Header) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HttpRequest_Header.Merge(m, src)
}
func (m *HttpRequest_Header) XXX_Size() int {
	return xxx_messageInfo_HttpRequest_Header.Size(m)
}
func (m *HttpRequest_Header) XXX_DiscardUnknown() {
	xxx_messageInfo_HttpRequest_Header.DiscardUnknown(m)
}

var xxx_messageInfo_HttpRequest_Header proto.InternalMessageInfo

func (m *HttpRequest_Header) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *HttpRequest_Header) GetValue() []string {
	if m != nil {
		return m.Value
	}
	return nil
}

type HttpResponse struct {
	Status               int32                 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Header               []*HttpRequest_Header `protobuf:"bytes,2,rep,name=header,proto3" json:"header,omitempty"`
	Body                 []byte                `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *HttpResponse) Reset()         { *m = HttpResponse{} }
func (m *HttpResponse) String() string { return proto.CompactTextString(m) }
func (*HttpResponse) ProtoMessage()    {}
func (*HttpResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ead6f188e0e8e0b1, []int{1}
}

func (m *HttpResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HttpResponse.Unmarshal(m, b)
}
func (m *HttpResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HttpResponse.Marshal(b, m, deterministic)
}
func (m *HttpResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HttpResponse.Merge(m, src)
}
func (m *HttpResponse) XXX_Size() int {
	return xxx_messageInfo_HttpResponse.Size(m)
}
func (m *HttpResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HttpResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HttpResponse proto.InternalMessageInfo

func (m *HttpResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *HttpResponse) GetHeader() []*HttpRequest_Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HttpResponse) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

type LoginRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginRequest) Reset()         { *m = LoginRequest{} }
func (m *LoginRequest) String() string { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()    {}
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ead6f188e0e8e0b1, []int{2}
}

func (m *LoginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginRequest.Unmarshal(m, b)
}
func (m *LoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginRequest.Marshal(b, m, deterministic)
}
func (m *LoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginRequest.Merge(m, src)
}
func (m *LoginRequest) XXX_Size() int {
	return xxx_messageInfo_LoginRequest.Size(m)
}
func (m *LoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoginRequest proto.InternalMessageInfo

func (m *LoginRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type HeartbeatPkg struct {
	Timestamp            int64    `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HeartbeatPkg) Reset()         { *m = HeartbeatPkg{} }
func (m *HeartbeatPkg) String() string { return proto.CompactTextString(m) }
func (*HeartbeatPkg) ProtoMessage()    {}
func (*HeartbeatPkg) Descriptor() ([]byte, []int) {
	return fileDescriptor_ead6f188e0e8e0b1, []int{3}
}

func (m *HeartbeatPkg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeartbeatPkg.Unmarshal(m, b)
}
func (m *HeartbeatPkg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeartbeatPkg.Marshal(b, m, deterministic)
}
func (m *HeartbeatPkg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeartbeatPkg.Merge(m, src)
}
func (m *HeartbeatPkg) XXX_Size() int {
	return xxx_messageInfo_HeartbeatPkg.Size(m)
}
func (m *HeartbeatPkg) XXX_DiscardUnknown() {
	xxx_messageInfo_HeartbeatPkg.DiscardUnknown(m)
}

var xxx_messageInfo_HeartbeatPkg proto.InternalMessageInfo

func (m *HeartbeatPkg) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type AckResponse struct {
	Code                 AckCode  `protobuf:"varint,1,opt,name=code,proto3,enum=portalcore.AckCode" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AckResponse) Reset()         { *m = AckResponse{} }
func (m *AckResponse) String() string { return proto.CompactTextString(m) }
func (*AckResponse) ProtoMessage()    {}
func (*AckResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ead6f188e0e8e0b1, []int{4}
}

func (m *AckResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AckResponse.Unmarshal(m, b)
}
func (m *AckResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AckResponse.Marshal(b, m, deterministic)
}
func (m *AckResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AckResponse.Merge(m, src)
}
func (m *AckResponse) XXX_Size() int {
	return xxx_messageInfo_AckResponse.Size(m)
}
func (m *AckResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AckResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AckResponse proto.InternalMessageInfo

func (m *AckResponse) GetCode() AckCode {
	if m != nil {
		return m.Code
	}
	return AckCode_Success
}

type RpcHeader struct {
	Method               string   `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Seq                  int32    `protobuf:"varint,3,opt,name=seq,proto3" json:"seq,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RpcHeader) Reset()         { *m = RpcHeader{} }
func (m *RpcHeader) String() string { return proto.CompactTextString(m) }
func (*RpcHeader) ProtoMessage()    {}
func (*RpcHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_ead6f188e0e8e0b1, []int{5}
}

func (m *RpcHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RpcHeader.Unmarshal(m, b)
}
func (m *RpcHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RpcHeader.Marshal(b, m, deterministic)
}
func (m *RpcHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RpcHeader.Merge(m, src)
}
func (m *RpcHeader) XXX_Size() int {
	return xxx_messageInfo_RpcHeader.Size(m)
}
func (m *RpcHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_RpcHeader.DiscardUnknown(m)
}

var xxx_messageInfo_RpcHeader proto.InternalMessageInfo

func (m *RpcHeader) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *RpcHeader) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *RpcHeader) GetSeq() int32 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func init() {
	proto.RegisterEnum("portalcore.AckCode", AckCode_name, AckCode_value)
	proto.RegisterType((*HttpRequest)(nil), "portalcore.HttpRequest")
	proto.RegisterType((*HttpRequest_Header)(nil), "portalcore.HttpRequest.Header")
	proto.RegisterType((*HttpResponse)(nil), "portalcore.HttpResponse")
	proto.RegisterType((*LoginRequest)(nil), "portalcore.LoginRequest")
	proto.RegisterType((*HeartbeatPkg)(nil), "portalcore.HeartbeatPkg")
	proto.RegisterType((*AckResponse)(nil), "portalcore.AckResponse")
	proto.RegisterType((*RpcHeader)(nil), "portalcore.RpcHeader")
}

func init() { proto.RegisterFile("portal.proto", fileDescriptor_ead6f188e0e8e0b1) }

var fileDescriptor_ead6f188e0e8e0b1 = []byte{
	// 452 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x53, 0x61, 0x8b, 0xd3, 0x40,
	0x10, 0xbd, 0x34, 0x4d, 0x7a, 0x99, 0x04, 0x29, 0xeb, 0xe1, 0x2d, 0x55, 0xb4, 0x04, 0xc1, 0x22,
	0x52, 0xa4, 0xc2, 0x7d, 0x12, 0xb1, 0xf8, 0xa5, 0xa0, 0x48, 0x59, 0x7f, 0xc0, 0xb1, 0xcd, 0x0e,
	0xd7, 0xa3, 0x4d, 0x37, 0xdd, 0xdd, 0x88, 0xfd, 0x05, 0xf7, 0xb7, 0x25, 0x93, 0xed, 0x35, 0x2a,
	0xe7, 0x87, 0xfb, 0x36, 0xf3, 0x76, 0xf2, 0xe6, 0xbd, 0xb7, 0x1b, 0xc8, 0x2a, 0x6d, 0x9c, 0xdc,
	0x4e, 0x2b, 0xa3, 0x9d, 0x66, 0xd0, 0x76, 0x85, 0x36, 0x98, 0xdf, 0xf5, 0x20, 0x5d, 0x38, 0x57,
	0x09, 0xdc, 0xd7, 0x68, 0x1d, 0x7b, 0x06, 0x71, 0x89, 0x6e, 0xad, 0x15, 0x0f, 0xc6, 0xc1, 0x24,
	0x11, 0xbe, 0x63, 0x43, 0x08, 0x6b, 0xb3, 0xe5, 0x3d, 0x02, 0x9b, 0x92, 0x3d, 0x87, 0xc4, 0xe0,
	0xfe, 0x9a, 0x28, 0x79, 0x48, 0xf8, 0xb9, 0xc1, 0xfd, 0x92, 0x56, 0x5c, 0x41, 0xbc, 0x46, 0xa9,
	0xd0, 0xf0, 0xfe, 0x38, 0x9c, 0xa4, 0xb3, 0x97, 0xd3, 0xd3, 0xce, 0x69, 0x67, 0xdf, 0x74, 0x41,
	0x53, 0xc2, 0x4f, 0x33, 0x06, 0xfd, 0x95, 0x56, 0x07, 0x1e, 0x8d, 0x83, 0x49, 0x26, 0xa8, 0x6e,
	0xb0, 0xb5, 0xb6, 0x8e, 0xc7, 0xb4, 0x83, 0x6a, 0xf6, 0x0a, 0x52, 0x83, 0xa5, 0x76, 0x78, 0x2d,
	0x95, 0x32, 0x7c, 0x40, 0x47, 0xd0, 0x42, 0x73, 0xa5, 0xcc, 0xe8, 0x3d, 0xc4, 0x2d, 0x75, 0xa3,
	0x7c, 0x83, 0x07, 0x6f, 0xa7, 0x29, 0xd9, 0x05, 0x44, 0x3f, 0xe5, 0xb6, 0x46, 0xde, 0x1b, 0x87,
	0x93, 0x44, 0xb4, 0x4d, 0x6e, 0x20, 0x6b, 0x85, 0xd9, 0x4a, 0xef, 0x2c, 0x36, 0x49, 0x58, 0x27,
	0x5d, 0x6d, 0xe9, 0xd3, 0x48, 0xf8, 0xae, 0x63, 0xad, 0xf7, 0x28, 0x6b, 0xe1, 0xc9, 0x5a, 0x9e,
	0x43, 0xf6, 0x4d, 0xdf, 0xdc, 0xee, 0x8e, 0xe9, 0x33, 0xe8, 0xef, 0x64, 0x89, 0x5e, 0x2c, 0xd5,
	0xf9, 0x3b, 0xc8, 0x16, 0x28, 0x8d, 0x5b, 0xa1, 0x74, 0xcb, 0xcd, 0x0d, 0x7b, 0x01, 0x89, 0xbb,
	0x2d, 0xd1, 0x3a, 0x59, 0x56, 0x34, 0x18, 0x8a, 0x13, 0x90, 0x5f, 0x41, 0x3a, 0x2f, 0x36, 0xf7,
	0x26, 0xde, 0x40, 0xbf, 0xd0, 0xaa, 0x25, 0x7c, 0x32, 0x7b, 0xda, 0x95, 0x3a, 0x2f, 0x36, 0x5f,
	0xb4, 0x42, 0x41, 0x03, 0xf9, 0x57, 0x48, 0x44, 0x55, 0xf8, 0xc8, 0x1e, 0x7a, 0x04, 0x17, 0x10,
	0xa1, 0x31, 0xda, 0xf8, 0x67, 0xd0, 0x36, 0x4d, 0xc0, 0x16, 0xf7, 0xe4, 0x2b, 0x12, 0x4d, 0xf9,
	0xf6, 0x35, 0x0c, 0x3c, 0x3b, 0x4b, 0x61, 0xf0, 0xa3, 0x2e, 0x0a, 0xb4, 0x76, 0x78, 0xc6, 0x32,
	0x38, 0xff, 0xae, 0x1d, 0x39, 0x1e, 0x06, 0xb3, 0xbb, 0x00, 0xa2, 0xa5, 0xd1, 0xbf, 0x0e, 0xec,
	0x23, 0x44, 0x04, 0x32, 0xde, 0x15, 0xd8, 0x4d, 0x66, 0x74, 0xf9, 0x97, 0xf4, 0xa3, 0xc3, 0xfc,
	0x8c, 0x7d, 0x86, 0xe4, 0x3e, 0xa0, 0x3f, 0x19, 0xba, 0xb9, 0xfd, 0x87, 0x61, 0xb6, 0x80, 0x78,
	0x49, 0x67, 0xec, 0x13, 0x0c, 0x8e, 0x77, 0x71, 0xf9, 0xc0, 0xbd, 0x8e, 0xf8, 0xbf, 0x07, 0x47,
	0xa6, 0x55, 0x4c, 0xbf, 0xc3, 0x87, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xc6, 0x1b, 0x56, 0xf2,
	0x71, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ProxyClient is the client API for Proxy service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProxyClient interface {
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*AckResponse, error)
	Heartbeat(ctx context.Context, in *HeartbeatPkg, opts ...grpc.CallOption) (*AckResponse, error)
}

type proxyClient struct {
	cc *grpc.ClientConn
}

func NewProxyClient(cc *grpc.ClientConn) ProxyClient {
	return &proxyClient{cc}
}

func (c *proxyClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*AckResponse, error) {
	out := new(AckResponse)
	err := c.cc.Invoke(ctx, "/portalcore.Proxy/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proxyClient) Heartbeat(ctx context.Context, in *HeartbeatPkg, opts ...grpc.CallOption) (*AckResponse, error) {
	out := new(AckResponse)
	err := c.cc.Invoke(ctx, "/portalcore.Proxy/Heartbeat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProxyServer is the server API for Proxy service.
type ProxyServer interface {
	Login(context.Context, *LoginRequest) (*AckResponse, error)
	Heartbeat(context.Context, *HeartbeatPkg) (*AckResponse, error)
}

// UnimplementedProxyServer can be embedded to have forward compatible implementations.
type UnimplementedProxyServer struct {
}

func (*UnimplementedProxyServer) Login(ctx context.Context, req *LoginRequest) (*AckResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (*UnimplementedProxyServer) Heartbeat(ctx context.Context, req *HeartbeatPkg) (*AckResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Heartbeat not implemented")
}

func RegisterProxyServer(s *grpc.Server, srv ProxyServer) {
	s.RegisterService(&_Proxy_serviceDesc, srv)
}

func _Proxy_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProxyServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/portalcore.Proxy/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProxyServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Proxy_Heartbeat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HeartbeatPkg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProxyServer).Heartbeat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/portalcore.Proxy/Heartbeat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProxyServer).Heartbeat(ctx, req.(*HeartbeatPkg))
	}
	return interceptor(ctx, in, info, handler)
}

var _Proxy_serviceDesc = grpc.ServiceDesc{
	ServiceName: "portalcore.Proxy",
	HandlerType: (*ProxyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _Proxy_Login_Handler,
		},
		{
			MethodName: "Heartbeat",
			Handler:    _Proxy_Heartbeat_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "portal.proto",
}

// PortalClient is the client API for Portal service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PortalClient interface {
	Request(ctx context.Context, in *HttpRequest, opts ...grpc.CallOption) (*HttpResponse, error)
}

type portalClient struct {
	cc *grpc.ClientConn
}

func NewPortalClient(cc *grpc.ClientConn) PortalClient {
	return &portalClient{cc}
}

func (c *portalClient) Request(ctx context.Context, in *HttpRequest, opts ...grpc.CallOption) (*HttpResponse, error) {
	out := new(HttpResponse)
	err := c.cc.Invoke(ctx, "/portalcore.Portal/Request", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PortalServer is the server API for Portal service.
type PortalServer interface {
	Request(context.Context, *HttpRequest) (*HttpResponse, error)
}

// UnimplementedPortalServer can be embedded to have forward compatible implementations.
type UnimplementedPortalServer struct {
}

func (*UnimplementedPortalServer) Request(ctx context.Context, req *HttpRequest) (*HttpResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Request not implemented")
}

func RegisterPortalServer(s *grpc.Server, srv PortalServer) {
	s.RegisterService(&_Portal_serviceDesc, srv)
}

func _Portal_Request_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HttpRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PortalServer).Request(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/portalcore.Portal/Request",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PortalServer).Request(ctx, req.(*HttpRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Portal_serviceDesc = grpc.ServiceDesc{
	ServiceName: "portalcore.Portal",
	HandlerType: (*PortalServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Request",
			Handler:    _Portal_Request_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "portal.proto",
}
